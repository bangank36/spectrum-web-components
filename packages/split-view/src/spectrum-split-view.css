/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/*THIS FILE IS MACHINE GENERATED. DO NOT EDIT*/
:host {
    /*.spectrum-SplitView*/
    --spectrum-splitview-vertical-width: 100%;
    --spectrum-splitview-vertical-gripper-width: 50%;
    --spectrum-splitview-vertical-gripper-outer-width: 100%;
    --spectrum-splitview-vertical-gripper-reset: 0;
}
:host {
    /*.spectrum-SplitView*/
    display: flex;
    overflow: hidden;
}
::slotted([slot='undefined']) {
    /*.spectrum-SplitView-pane*/
    height: 100%;
}
#gripper {
    border-radius: var(
        --spectrum-dragbar-gripper-border-radius,
        var(--spectrum-alias-border-radius-small)
    );
    border-style: solid;
    border-width: var(--spectrum-dragbar-gripper-border-width-vertical, 4px)
        var(--spectrum-dragbar-gripper-border-width-horizontal, 3px);
    /*.spectrum-SplitView-gripper*/
    content: '';
    display: block;
    height: var(
        --spectrum-dragbar-gripper-height,
        var(--spectrum-global-dimension-static-size-200)
    );
    /*[dir="ltr"] .spectrum-SplitView-gripper*/
    left: calc(
        (
                var(
                        --spectrum-dragbar-gripper-width,
                        var(--spectrum-global-dimension-static-size-50)
                    ) + 2 *
                    var(--spectrum-dragbar-gripper-border-width-horizontal, 3px) -
                    var(
                        --spectrum-dragbar-handle-width,
                        var(--spectrum-global-dimension-static-size-25)
                    )
            ) / 2 * -1
    );
    position: absolute;
    /*[dir="rtl"] .spectrum-SplitView-gripper*/
    right: calc(
        (
                var(
                        --spectrum-dragbar-gripper-width,
                        var(--spectrum-global-dimension-static-size-50)
                    ) + 2 *
                    var(--spectrum-dragbar-gripper-border-width-horizontal, 3px) -
                    var(
                        --spectrum-dragbar-handle-width,
                        var(--spectrum-global-dimension-static-size-25)
                    )
            ) / 2 * -1
    );
    top: 50%;
    transform: translateY(-50%);
    width: var(
        --spectrum-dragbar-gripper-width,
        var(--spectrum-global-dimension-static-size-50)
    );
}
#splitter {
    height: 100%;
    /*.spectrum-SplitView-splitter*/
    position: relative;
    -webkit-user-select: none;
    user-select: none;
    width: var(
        --spectrum-dragbar-handle-width,
        var(--spectrum-global-dimension-static-size-25)
    );
    z-index: 1;
}
#splitter.is-collapsed-end #gripper:before,
#splitter.is-collapsed-start #gripper:before {
    /*[dir="ltr"] .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper:before,[dir="ltr"]  .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper:before*/
    left: calc(
        50% -
            var(
                --spectrum-dragbar-handle-width,
                var(--spectrum-global-dimension-static-size-25)
            ) / 2
    );
}
#splitter.is-collapsed-end #gripper:before,
#splitter.is-collapsed-start #gripper:before {
    /*[dir="rtl"] .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper:before,[dir="rtl"]  .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper:before*/
    right: calc(
        50% -
            var(
                --spectrum-dragbar-handle-width,
                var(--spectrum-global-dimension-static-size-25)
            ) / 2
    );
}
#splitter.is-collapsed-end #gripper:before,
#splitter.is-collapsed-start #gripper:before {
    /*.spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper:before, .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper:before*/
    content: '';
    height: 100%;
    position: absolute;
    top: 0;
    width: var(
        --spectrum-dragbar-handle-width,
        var(--spectrum-global-dimension-static-size-25)
    );
}
#splitter.is-collapsed-start #gripper {
    /*[dir="ltr"] .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper*/
    left: 0;
    /*[dir="rtl"] .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper*/
    right: 0;
}
#splitter.is-collapsed-end #gripper {
    /*[dir="rtl"] .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper*/
    left: 0;
    /*[dir="ltr"] .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper*/
    left: auto;
    /*[dir="ltr"] .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper*/
    right: 0;
    /*[dir="rtl"] .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper*/
    right: auto;
}
:host(:where([vertical])) {
    /*.spectrum-SplitView--vertical*/
    flex-direction: column;
}
:host(:where([vertical])) ::slotted([slot='undefined']) {
    /*.spectrum-SplitView--vertical .spectrum-SplitView-pane*/
    height: auto;
    width: var(--spectrum-splitview-vertical-width);
}
:host(:where([dir='ltr'])) [vertical] #gripper {
    /*[dir="ltr"] .spectrum-SplitView--vertical .spectrum-SplitView-gripper*/
    left: var(--spectrum-splitview-vertical-gripper-width);
}
:host(:where([dir='rtl'])) [vertical] #gripper {
    /*[dir="rtl"] .spectrum-SplitView--vertical .spectrum-SplitView-gripper*/
    right: var(--spectrum-splitview-vertical-gripper-width);
}
:host(:where([vertical])) #gripper {
    border-width: var(--spectrum-dragbar-gripper-border-width-horizontal, 3px)
        var(--spectrum-dragbar-gripper-border-width-vertical, 4px);
    height: var(
        --spectrum-dragbar-gripper-width,
        var(--spectrum-global-dimension-static-size-50)
    );
    /*.spectrum-SplitView--vertical .spectrum-SplitView-gripper*/
    top: calc(
        (
                var(
                        --spectrum-dragbar-gripper-width,
                        var(--spectrum-global-dimension-static-size-50)
                    ) + 2 *
                    var(--spectrum-dragbar-gripper-border-width-horizontal, 3px) -
                    var(
                        --spectrum-dragbar-handle-width,
                        var(--spectrum-global-dimension-static-size-25)
                    )
            ) / 2 * -1
    );
    transform: translate(
        calc(var(--spectrum-splitview-vertical-gripper-width) * -1)
    );
    width: var(
        --spectrum-dragbar-gripper-height,
        var(--spectrum-global-dimension-static-size-200)
    );
}
:host(:where([vertical])) #splitter {
    height: var(
        --spectrum-dragbar-handle-width,
        var(--spectrum-global-dimension-static-size-25)
    );
    /*.spectrum-SplitView--vertical .spectrum-SplitView-splitter*/
    width: var(--spectrum-splitview-vertical-width);
}
:host(:where([dir='ltr'])) [vertical] #splitter.is-collapsed-end #gripper,
:host(:where([dir='ltr'])) [vertical] #splitter.is-collapsed-start #gripper {
    /*[dir="ltr"] .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper,[dir="ltr"]  .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper*/
    left: var(--spectrum-splitview-vertical-gripper-width);
}
:host(:where([dir='rtl'])) [vertical] #splitter.is-collapsed-end #gripper,
:host(:where([dir='rtl'])) [vertical] #splitter.is-collapsed-start #gripper {
    /*[dir="rtl"] .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper,[dir="rtl"]  .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper*/
    right: var(--spectrum-splitview-vertical-gripper-width);
}
:host(:where([dir='ltr']))
    [vertical]
    #splitter.is-collapsed-end
    #gripper:before,
:host(:where([dir='ltr']))
    [vertical]
    #splitter.is-collapsed-start
    #gripper:before {
    /*[dir="ltr"] .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper:before,[dir="ltr"]  .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper:before*/
    left: var(--spectrum-splitview-vertical-gripper-reset);
}
:host(:where([dir='rtl']))
    [vertical]
    #splitter.is-collapsed-end
    #gripper:before,
:host(:where([dir='rtl']))
    [vertical]
    #splitter.is-collapsed-start
    #gripper:before {
    /*[dir="rtl"] .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper:before,[dir="rtl"]  .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper:before*/
    right: var(--spectrum-splitview-vertical-gripper-reset);
}
:host(:where([vertical])) #splitter.is-collapsed-end #gripper:before,
:host(:where([vertical])) #splitter.is-collapsed-start #gripper:before {
    height: var(
        --spectrum-dragbar-handle-width,
        var(--spectrum-global-dimension-static-size-25)
    );
    /*.spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper:before, .spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper:before*/
    top: calc(
        var(--spectrum-splitview-vertical-gripper-width) -
            var(
                --spectrum-dragbar-handle-width,
                var(--spectrum-global-dimension-static-size-25)
            ) / 2
    );
    width: var(--spectrum-splitview-vertical-gripper-outer-width);
}
:host(:where([vertical])) #splitter.is-collapsed-start #gripper {
    /*.spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-start .spectrum-SplitView-gripper*/
    top: var(--spectrum-splitview-vertical-gripper-reset);
}
:host(:where([vertical])) #splitter.is-collapsed-end #gripper {
    bottom: var(--spectrum-splitview-vertical-gripper-reset);
    /*.spectrum-SplitView--vertical .spectrum-SplitView-splitter.is-collapsed-end .spectrum-SplitView-gripper*/
    top: auto;
}
::slotted([slot='undefined']) {
    /*.spectrum-SplitView-pane*/
    background-color: var(
        --spectrum-panel-s-background-color,
        var(--spectrum-alias-toolbar-background-color)
    );
}
#splitter {
    /*.spectrum-SplitView-splitter*/
    background-color: var(
        --spectrum-dragbar-handle-background-color,
        var(--spectrum-global-color-gray-300)
    );
}
#gripper {
    /*.spectrum-SplitView-gripper*/
    border-color: var(
        --spectrum-dragbar-handle-background-color,
        var(--spectrum-global-color-gray-300)
    );
}
#gripper:before {
    /*.spectrum-SplitView-gripper:before*/
    background-color: var(
        --spectrum-dragbar-handle-background-color,
        var(--spectrum-global-color-gray-300)
    );
}
#splitter[resizable].is-hovered,
#splitter[resizable]:hover {
    /*.spectrum-SplitView-splitter.is-draggable:hover,
    .spectrum-SplitView-splitter.is-draggable.is-hovered*/
    background-color: var(
        --spectrum-dragbar-handle-background-color-hover,
        var(--spectrum-global-color-gray-400)
    );
}
#splitter[resizable].is-hovered #gripper,
#splitter[resizable]:hover #gripper {
    /*.spectrum-SplitView-splitter.is-draggable:hover .spectrum-SplitView-gripper, .spectrum-SplitView-splitter.is-draggable.is-hovered .spectrum-SplitView-gripper*/
    border-color: var(
        --spectrum-dragbar-handle-background-color-hover,
        var(--spectrum-global-color-gray-400)
    );
}
#splitter[resizable].is-hovered #gripper:before,
#splitter[resizable]:hover #gripper:before {
    /*.spectrum-SplitView-splitter.is-draggable:hover .spectrum-SplitView-gripper:before, .spectrum-SplitView-splitter.is-draggable.is-hovered .spectrum-SplitView-gripper:before*/
    background-color: var(
        --spectrum-dragbar-handle-background-color-hover,
        var(--spectrum-global-color-gray-400)
    );
}
#splitter[resizable].is-active,
#splitter[resizable]:active {
    /*.spectrum-SplitView-splitter.is-draggable:active,
    .spectrum-SplitView-splitter.is-draggable.is-active*/
    background-color: var(
        --spectrum-dragbar-handle-background-color-down,
        var(--spectrum-global-color-gray-800)
    );
}
#splitter[resizable].is-active #gripper,
#splitter[resizable]:active #gripper {
    /*.spectrum-SplitView-splitter.is-draggable:active .spectrum-SplitView-gripper, .spectrum-SplitView-splitter.is-draggable.is-active .spectrum-SplitView-gripper*/
    border-color: var(
        --spectrum-dragbar-handle-background-color-down,
        var(--spectrum-global-color-gray-800)
    );
}
#splitter[resizable].is-active #gripper:before,
#splitter[resizable]:active #gripper:before {
    /*.spectrum-SplitView-splitter.is-draggable:active .spectrum-SplitView-gripper:before, .spectrum-SplitView-splitter.is-draggable.is-active .spectrum-SplitView-gripper:before*/
    background-color: var(
        --spectrum-dragbar-handle-background-color-down,
        var(--spectrum-global-color-gray-800)
    );
}
#splitter[resizable]:focus {
    /*.spectrum-SplitView-splitter.is-draggable:focus*/
    outline: none;
}
#splitter[resizable].focus-visible {
    /*.spectrum-SplitView-splitter.is-draggable.focus-ring*/
    background-color: var(
        --spectrum-alias-focus-color,
        var(--spectrum-global-color-blue-400)
    );
}
#splitter[resizable]:focus-visible {
    /*.spectrum-SplitView-splitter.is-draggable.focus-ring*/
    background-color: var(
        --spectrum-alias-focus-color,
        var(--spectrum-global-color-blue-400)
    );
}
#splitter[resizable].focus-visible #gripper {
    /*.spectrum-SplitView-splitter.is-draggable.focus-ring .spectrum-SplitView-gripper*/
    border-color: var(
        --spectrum-alias-focus-color,
        var(--spectrum-global-color-blue-400)
    );
    box-shadow: 0 0 0 1px
        var(--spectrum-alias-focus-color, var(--spectrum-global-color-blue-400));
}
#splitter[resizable]:focus-visible #gripper {
    /*.spectrum-SplitView-splitter.is-draggable.focus-ring .spectrum-SplitView-gripper*/
    border-color: var(
        --spectrum-alias-focus-color,
        var(--spectrum-global-color-blue-400)
    );
    box-shadow: 0 0 0 1px
        var(--spectrum-alias-focus-color, var(--spectrum-global-color-blue-400));
}
#splitter[resizable].focus-visible #gripper:before {
    /*.spectrum-SplitView-splitter.is-draggable.focus-ring .spectrum-SplitView-gripper:before*/
    background-color: var(
        --spectrum-alias-focus-color,
        var(--spectrum-global-color-blue-400)
    );
}
#splitter[resizable]:focus-visible #gripper:before {
    /*.spectrum-SplitView-splitter.is-draggable.focus-ring .spectrum-SplitView-gripper:before*/
    background-color: var(
        --spectrum-alias-focus-color,
        var(--spectrum-global-color-blue-400)
    );
}
