/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/*THIS FILE IS MACHINE GENERATED. DO NOT EDIT*/
:host {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-appearance: button;
    box-sizing: border-box;
    cursor: pointer;
    display: inline-flex;
    font-family: var(
        --spectrum-alias-body-text-font-family,
        var(--spectrum-global-font-family-base)
    );
    line-height: var(
        --spectrum-alias-component-text-line-height,
        var(--spectrum-global-font-line-height-small)
    );
    overflow: visible;
    /*.spectrum-Picker*/
    position: relative;
    text-decoration: none;
    text-transform: none;
    transition: background var(--spectrum-global-animation-duration-100, 0.13s)
            ease-out,
        border-color var(--spectrum-global-animation-duration-100, 0.13s)
            ease-out,
        color var(--spectrum-global-animation-duration-100, 0.13s) ease-out,
        box-shadow var(--spectrum-global-animation-duration-100, 0.13s) ease-out;
    user-select: none;
    -webkit-user-select: none;
    vertical-align: top;
}
:host(:where(:focus)) {
    /*.spectrum-Picker:focus*/
    outline: none;
}
:host::-moz-focus-inner {
    /*.spectrum-Picker::-moz-focus-inner*/
    border: 0;
    border-style: none;
    margin-bottom: -2px;
    margin-top: -2px;
    padding: 0;
}
:host(:where(:disabled)) {
    /*.spectrum-Picker:disabled*/
    cursor: default;
}
:host(:where([dir='ltr'])) {
    /*[dir="ltr"] .spectrum-Picker*/
    padding-left: var(--spectrum-picker-textonly-padding-left-adjusted);
    padding-right: var(--spectrum-picker-textonly-padding-right-adjusted);
}
:host(:where([dir='rtl'])) {
    padding-left: var(--spectrum-picker-textonly-padding-right-adjusted);
    /*[dir="rtl"] .spectrum-Picker*/
    padding-right: var(--spectrum-picker-textonly-padding-left-adjusted);
}
:host {
    align-items: center;
    border-radius: var(--spectrum-picker-texticon-border-radius);
    border-style: solid;
    border-width: var(--spectrum-picker-texticon-border-size);

    /*.spectrum-Picker*/
    display: flex;
    height: var(--spectrum-picker-texticon-height);
    justify-content: center;
    margin: 0;
    max-width: 100%;
    min-width: var(--spectrum-picker-texticon-min-width);
    padding-bottom: 0;
    padding-top: 0;
    transition: background-color
            var(--spectrum-global-animation-duration-100, 0.13s),
        box-shadow var(--spectrum-global-animation-duration-100, 0.13s),
        border-color var(--spectrum-global-animation-duration-100, 0.13s);
    width: var(--spectrum-picker-texticon-width);
}
:host(:where(:disabled)),
:host(:where([disabled])) {
    /*.spectrum-Picker:disabled,
  .spectrum-Picker.is-disabled*/
    border-width: var(--spectrum-picker-texticon-disabled-border-size);
    cursor: default;
}
:host(:where([dir='ltr'])) .icon {
    /*[dir="ltr"] .spectrum-Picker .spectrum-Picker-icon*/
    margin-right: var(--spectrum-picker-texticon-icon-gap);
}
:host(:where([dir='rtl'])) .icon {
    /*[dir="rtl"] .spectrum-Picker .spectrum-Picker-icon*/
    margin-left: var(--spectrum-picker-texticon-icon-gap);
}
.icon {
    /*.spectrum-Picker .spectrum-Picker-icon*/
    flex-shrink: 0;
}
:host(:where([dir='ltr'])) #label + .icon {
    /*[dir="ltr"] .spectrum-Picker .spectrum-Picker-label + .spectrum-Picker-icon*/
    margin-left: calc(
        (
                var(--spectrum-picker-textonly-padding-left-adjusted) -
                    var(--spectrum-picker-padding-left-adjusted)
            ) * -1
    );
}
:host(:where([dir='rtl'])) #label + .icon {
    /*[dir="rtl"] .spectrum-Picker .spectrum-Picker-label + .spectrum-Picker-icon*/
    margin-right: calc(
        (
                var(--spectrum-picker-textonly-padding-left-adjusted) -
                    var(--spectrum-picker-padding-left-adjusted)
            ) * -1
    );
}
:host(:where([size='s'])) {
    /*.spectrum-Picker--sizeS*/
    --spectrum-picker-texticon-border-size: var(
        --spectrum-picker-s-texticon-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-texticon-text-size: var(
        --spectrum-picker-s-texticon-text-size,
        var(--spectrum-global-dimension-font-size-75)
    );
    --spectrum-picker-texticon-icon-gap: var(
        --spectrum-picker-s-texticon-icon-gap,
        var(--spectrum-global-dimension-size-85)
    );
    --spectrum-picker-texticon-placeholder-font-style: var(
        --spectrum-picker-s-texticon-placeholder-font-style,
        var(--spectrum-global-font-style-italic)
    );
    --spectrum-picker-texticon-placeholder-font-weight: var(
        --spectrum-picker-s-texticon-placeholder-font-weight,
        var(--spectrum-global-font-weight-regular)
    );
    --spectrum-picker-texticon-error-icon-margin-left: var(
        --spectrum-picker-s-texticon-error-icon-margin-left,
        var(--spectrum-global-dimension-size-100)
    );
    --spectrum-picker-texticon-ui-icon-gap: var(
        --spectrum-picker-s-texticon-ui-icon-gap,
        var(--spectrum-global-dimension-size-85)
    );
    --spectrum-picker-texticon-popover-max-width: var(
        --spectrum-picker-s-texticon-popover-max-width,
        var(--spectrum-global-dimension-size-1800)
    );
    --spectrum-picker-texticon-padding-left: var(
        --spectrum-picker-s-texticon-padding-left,
        var(--spectrum-global-dimension-size-85)
    );
    --spectrum-picker-texticon-height: var(
        --spectrum-picker-s-texticon-height,
        var(--spectrum-global-dimension-size-300)
    );
    --spectrum-picker-texticon-min-width: var(
        --spectrum-picker-s-texticon-min-width,
        var(--spectrum-global-dimension-size-450)
    );
    --spectrum-picker-texticon-width: var(
        --spectrum-picker-s-texticon-width,
        var(--spectrum-global-dimension-size-2000)
    );
    --spectrum-picker-texticon-border-radius: var(
        --spectrum-picker-s-texticon-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
    --spectrum-picker-textonly-border-size: var(
        --spectrum-picker-s-textonly-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-textonly-padding-left: var(
        --spectrum-picker-s-textonly-padding-left,
        var(--spectrum-global-dimension-size-115)
    );
    --spectrum-picker-textonly-padding-right: var(
        --spectrum-picker-s-textonly-padding-right,
        var(--spectrum-global-dimension-size-115)
    );
    --spectrum-picker-textonly-border-radius: var(
        --spectrum-picker-s-textonly-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
}
:host(:where([size='m'])) {
    /*.spectrum-Picker--sizeM*/
    --spectrum-picker-texticon-padding-left: var(
        --spectrum-picker-m-texticon-padding-left
    );
    --spectrum-picker-texticon-border-size: var(
        --spectrum-picker-m-texticon-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-texticon-text-size: var(
        --spectrum-picker-m-texticon-text-size,
        var(--spectrum-global-dimension-font-size-100)
    );
    --spectrum-picker-texticon-icon-gap: var(
        --spectrum-picker-m-texticon-icon-gap,
        var(--spectrum-global-dimension-size-100)
    );
    --spectrum-picker-texticon-placeholder-font-style: var(
        --spectrum-picker-m-texticon-placeholder-font-style,
        var(--spectrum-global-font-style-italic)
    );
    --spectrum-picker-texticon-placeholder-font-weight: var(
        --spectrum-picker-m-texticon-placeholder-font-weight,
        var(--spectrum-global-font-weight-regular)
    );
    --spectrum-picker-texticon-error-icon-margin-left: var(
        --spectrum-picker-m-texticon-error-icon-margin-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-picker-texticon-ui-icon-gap: var(
        --spectrum-picker-m-texticon-ui-icon-gap,
        var(--spectrum-global-dimension-size-100)
    );
    --spectrum-picker-texticon-popover-max-width: var(
        --spectrum-picker-m-texticon-popover-max-width,
        var(--spectrum-global-dimension-size-2400)
    );
    --spectrum-picker-texticon-height: var(
        --spectrum-picker-m-texticon-height,
        var(--spectrum-global-dimension-size-400)
    );
    --spectrum-picker-texticon-min-width: var(
        --spectrum-picker-m-texticon-min-width,
        var(--spectrum-global-dimension-size-600)
    );
    --spectrum-picker-texticon-width: var(
        --spectrum-picker-m-texticon-width,
        var(--spectrum-global-dimension-size-2400)
    );
    --spectrum-picker-texticon-border-radius: var(
        --spectrum-picker-m-texticon-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
    --spectrum-picker-textonly-border-size: var(
        --spectrum-picker-m-textonly-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-textonly-padding-left: var(
        --spectrum-picker-m-textonly-padding-left,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-picker-textonly-padding-right: var(
        --spectrum-picker-m-textonly-padding-right,
        var(--spectrum-global-dimension-size-150)
    );
    --spectrum-picker-textonly-border-radius: var(
        --spectrum-picker-m-textonly-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
}
:host(:where([size='l'])) {
    /*.spectrum-Picker--sizeL*/
    --spectrum-picker-texticon-border-size: var(
        --spectrum-picker-l-texticon-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-texticon-text-size: var(
        --spectrum-picker-l-texticon-text-size,
        var(--spectrum-global-dimension-font-size-200)
    );
    --spectrum-picker-texticon-icon-gap: var(
        --spectrum-picker-l-texticon-icon-gap,
        var(--spectrum-global-dimension-size-115)
    );
    --spectrum-picker-texticon-placeholder-font-style: var(
        --spectrum-picker-l-texticon-placeholder-font-style,
        var(--spectrum-global-font-style-italic)
    );
    --spectrum-picker-texticon-placeholder-font-weight: var(
        --spectrum-picker-l-texticon-placeholder-font-weight,
        var(--spectrum-global-font-weight-regular)
    );
    --spectrum-picker-texticon-error-icon-margin-left: var(
        --spectrum-picker-l-texticon-error-icon-margin-left,
        var(--spectrum-global-dimension-size-185)
    );
    --spectrum-picker-texticon-ui-icon-gap: var(
        --spectrum-picker-l-texticon-ui-icon-gap,
        var(--spectrum-global-dimension-size-115)
    );
    --spectrum-picker-texticon-popover-max-width: var(
        --spectrum-picker-l-texticon-popover-max-width,
        var(--spectrum-global-dimension-size-3000)
    );
    --spectrum-picker-texticon-padding-left: var(
        --spectrum-picker-l-texticon-padding-left,
        var(--spectrum-global-dimension-size-160)
    );
    --spectrum-picker-texticon-height: var(
        --spectrum-picker-l-texticon-height,
        var(--spectrum-global-dimension-size-500)
    );
    --spectrum-picker-texticon-min-width: var(
        --spectrum-picker-l-texticon-min-width,
        var(--spectrum-global-dimension-size-750)
    );
    --spectrum-picker-texticon-width: var(
        --spectrum-picker-l-texticon-width,
        var(--spectrum-global-dimension-size-2500)
    );
    --spectrum-picker-texticon-border-radius: var(
        --spectrum-picker-l-texticon-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
    --spectrum-picker-textonly-border-size: var(
        --spectrum-picker-l-textonly-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-textonly-padding-left: var(
        --spectrum-picker-l-textonly-padding-left,
        var(--spectrum-global-dimension-size-185)
    );
    --spectrum-picker-textonly-padding-right: var(
        --spectrum-picker-l-textonly-padding-right,
        var(--spectrum-global-dimension-size-185)
    );
    --spectrum-picker-textonly-border-radius: var(
        --spectrum-picker-l-textonly-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
}
:host(:where([size='xl'])) {
    /*.spectrum-Picker--sizeXL*/
    --spectrum-picker-texticon-border-size: var(
        --spectrum-picker-xl-texticon-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-texticon-text-size: var(
        --spectrum-picker-xl-texticon-text-size,
        var(--spectrum-global-dimension-font-size-300)
    );
    --spectrum-picker-texticon-icon-gap: var(
        --spectrum-picker-xl-texticon-icon-gap,
        var(--spectrum-global-dimension-size-125)
    );
    --spectrum-picker-texticon-placeholder-font-style: var(
        --spectrum-picker-xl-texticon-placeholder-font-style,
        var(--spectrum-global-font-style-italic)
    );
    --spectrum-picker-texticon-placeholder-font-weight: var(
        --spectrum-picker-xl-texticon-placeholder-font-weight,
        var(--spectrum-global-font-weight-regular)
    );
    --spectrum-picker-texticon-error-icon-margin-left: var(
        --spectrum-picker-xl-texticon-error-icon-margin-left,
        var(--spectrum-global-dimension-size-225)
    );
    --spectrum-picker-texticon-ui-icon-gap: var(
        --spectrum-picker-xl-texticon-ui-icon-gap,
        var(--spectrum-global-dimension-size-125)
    );
    --spectrum-picker-texticon-popover-max-width: var(
        --spectrum-picker-xl-texticon-popover-max-width,
        var(--spectrum-global-dimension-size-3600)
    );
    --spectrum-picker-texticon-padding-left: var(
        --spectrum-picker-xl-texticon-padding-left,
        var(--spectrum-global-dimension-size-185)
    );
    --spectrum-picker-texticon-height: var(
        --spectrum-picker-xl-texticon-height,
        var(--spectrum-global-dimension-size-600)
    );
    --spectrum-picker-texticon-min-width: var(
        --spectrum-picker-xl-texticon-min-width,
        var(--spectrum-global-dimension-size-900)
    );
    --spectrum-picker-texticon-width: var(
        --spectrum-picker-xl-texticon-width,
        var(--spectrum-global-dimension-size-3000)
    );
    --spectrum-picker-texticon-border-radius: var(
        --spectrum-picker-xl-texticon-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
    --spectrum-picker-textonly-border-size: var(
        --spectrum-picker-xl-textonly-border-size,
        var(--spectrum-alias-border-size-thin)
    );
    --spectrum-picker-textonly-padding-left: var(
        --spectrum-picker-xl-textonly-padding-left,
        var(--spectrum-global-dimension-size-225)
    );
    --spectrum-picker-textonly-padding-right: var(
        --spectrum-picker-xl-textonly-padding-right,
        var(--spectrum-global-dimension-size-225)
    );
    --spectrum-picker-textonly-border-radius: var(
        --spectrum-picker-xl-textonly-border-radius,
        var(--spectrum-alias-component-border-radius)
    );
}
:host {
    /*.spectrum-Picker*/
    --spectrum-picker-texticon-min-width: var(
        --spectrum-global-dimension-size-400
    );
    --spectrum-picker-texticon-disabled-border-size: 0;
    --spectrum-picker-texticon-popover-max-width: var(
        --spectrum-global-dimension-size-3000
    );
    --spectrum-picker-texticon-width: var(
        --spectrum-global-dimension-size-2400
    );
    --spectrum-picker-texticon-border-size-increase-focus: 1px;
    --spectrum-picker-padding-left-adjusted: calc(
        var(--spectrum-picker-texticon-padding-left) -
            var(--spectrum-picker-texticon-border-size)
    );
    --spectrum-picker-textonly-padding-left-adjusted: calc(
        var(--spectrum-picker-textonly-padding-left) -
            var(--spectrum-picker-textonly-border-size)
    );
    --spectrum-picker-textonly-padding-right-adjusted: calc(
        var(--spectrum-picker-textonly-padding-right) -
            var(--spectrum-picker-textonly-border-size)
    );
    --spectrum-picker-focus-ring-border-radius-adjusted: calc(
        var(--spectrum-picker-textonly-border-radius) +
            var(--spectrum-picker-focus-ring-gap)
    );
}
:host {
    /*.spectrum-Picker*/
    --spectrum-picker-focus-ring-gap: var(
        --spectrum-alias-component-focusring-gap,
        var(--spectrum-global-dimension-static-size-0)
    );
    --spectrum-picker-focus-ring-size: var(
        --spectrum-alias-component-focusring-size,
        var(--spectrum-global-dimension-static-size-10)
    );
    --spectrum-picker-focus-ring-color: var(
        --spectrum-picker-m-textonly-focusring-border-color-key-focus,
        var(--spectrum-alias-focus-ring-color)
    );
    transition: border-color
        var(--spectrum-global-animation-duration-100, 0.13s) ease-in-out;
}
:host:after {
    border-radius: var(--spectrum-picker-focus-ring-border-radius-adjusted);
    bottom: 0;
    content: '';
    left: 0;
    margin: calc(
        (
                var(--spectrum-picker-focus-ring-gap) +
                    var(--spectrum-picker-textonly-border-size)
            ) * -1
    );
    /*.spectrum-Picker:after*/
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    transition: box-shadow var(--spectrum-global-animation-duration-100, 0.13s)
        ease-in-out;
}
:host(:where(.focus-visible)) {
    /*.spectrum-Picker.focus-ring*/
    box-shadow: none;
}
:host(:where(:focus-visible)) {
    /*.spectrum-Picker.focus-ring*/
    box-shadow: none;
}
:host(:where(.focus-visible)):after {
    /*.spectrum-Picker.focus-ring:after*/
    box-shadow: 0 0 0 var(--spectrum-picker-focus-ring-size)
        var(--spectrum-picker-focus-ring-color);
}
:host(:where(:focus-visible)):after {
    /*.spectrum-Picker.focus-ring:after*/
    box-shadow: 0 0 0 var(--spectrum-picker-focus-ring-size)
        var(--spectrum-picker-focus-ring-color);
}
:host(:where([quiet])) {
    /*.spectrum-Picker--quiet*/
    --spectrum-picker-texticon-border-size: 0;
    --spectrum-picker-texticon-border-radius: 0;
    --spectrum-picker-textonly-padding-left: 0;
    --spectrum-picker-textonly-padding-right: 0;
    --spectrum-picker-quiet-background-color-key-focus: transparent;
    --spectrum-picker-quiet-border-color-key-focus: var(
        --spectrum-global-color-blue-400
    );
}
:host(:where([quiet])) {
    min-width: 0;
    /*.spectrum-Picker--quiet*/
    width: auto;
}
:host(:where([quiet]:disabled.focus-visible)),
:host(:where([quiet][disabled].focus-visible)) {
    /*.spectrum-Picker--quiet:disabled.focus-ring, .spectrum-Picker--quiet.is-disabled.focus-ring*/
    box-shadow: none;
}
:host(:where([quiet]:disabled:focus-visible)),
:host(:where([quiet][disabled]:focus-visible)) {
    /*.spectrum-Picker--quiet:disabled.focus-ring, .spectrum-Picker--quiet.is-disabled.focus-ring*/
    box-shadow: none;
}
#label {
    /*.spectrum-Picker-label*/
    flex: 1 1 auto;
    font-size: var(--spectrum-picker-texticon-text-size);
    height: calc(
        var(--spectrum-picker-texticon-height) -
            var(--spectrum-picker-texticon-border-size) * 2
    );
    line-height: calc(
        var(--spectrum-picker-texticon-height) -
            var(--spectrum-picker-texticon-border-size) * 2
    );
    overflow: hidden;
    /*[dir="ltr"] .spectrum-Picker-label*/
    text-align: left;
    /*[dir="rtl"] .spectrum-Picker-label*/
    text-align: right;
    text-overflow: ellipsis;
    white-space: nowrap;
}
#label.placeholder {
    font-style: var(--spectrum-picker-texticon-placeholder-font-style);
    /*.spectrum-Picker-label.is-placeholder*/
    font-weight: var(--spectrum-picker-texticon-placeholder-font-weight);
    transition: color var(--spectrum-global-animation-duration-100, 0.13s)
        ease-in-out;
}
.picker {
    /*.spectrum-Picker-menuIcon*/
    display: inline-block;
    flex-shrink: 0;
    position: relative;
    transition: color var(--spectrum-global-animation-duration-100, 0.13s)
        ease-out;
    vertical-align: top;
}
.validation-icon {
    /*[dir="ltr"] .spectrum-Picker-validationIcon*/
    margin-left: var(--spectrum-picker-texticon-error-icon-margin-left);
    /*[dir="rtl"] .spectrum-Picker-validationIcon*/
    margin-right: var(--spectrum-picker-texticon-error-icon-margin-left);
}
#label ~ .picker {
    /*[dir="ltr"] .spectrum-Picker-label ~ .spectrum-Picker-menuIcon*/
    margin-left: var(--spectrum-picker-texticon-ui-icon-gap);
}
#label ~ .picker {
    /*[dir="rtl"] .spectrum-Picker-label ~ .spectrum-Picker-menuIcon*/
    margin-right: var(--spectrum-picker-texticon-ui-icon-gap);
}
#popover {
    /*.spectrum-Picker-popover*/
    max-width: var(--spectrum-picker-texticon-popover-max-width);
}
.spectrum-Picker-popover--quiet {
    /*[dir="ltr"] .spectrum-Picker-popover--quiet*/
    margin-left: calc(
        (
                var(
                        --spectrum-picker-m-quiet-texticon-popover-offset-x,
                        var(--spectrum-global-dimension-size-150)
                    ) +
                    var(
                        --spectrum-popover-border-size,
                        var(--spectrum-alias-border-size-thin)
                    )
            ) * -1
    );
    /*[dir="rtl"] .spectrum-Picker-popover--quiet*/
    margin-right: calc(
        (
                var(
                        --spectrum-picker-m-quiet-texticon-popover-offset-x,
                        var(--spectrum-global-dimension-size-150)
                    ) +
                    var(
                        --spectrum-popover-border-size,
                        var(--spectrum-alias-border-size-thin)
                    )
            ) * -1
    );
}
:host {
    background-color: var(
        --spectrum-picker-m-texticon-background-color,
        var(--spectrum-alias-component-background-color-default)
    );
    border-color: var(
        --spectrum-picker-m-texticon-border-color,
        var(--spectrum-alias-component-border-color-default)
    );
    /*.spectrum-Picker*/
    color: var(
        --spectrum-picker-m-texticon-text-color,
        var(--spectrum-alias-component-text-color-default)
    );
}
:host(:where(:hover)) {
    background-color: var(
        --spectrum-picker-m-texticon-background-color-hover,
        var(--spectrum-alias-component-background-color-hover)
    );
    border-color: var(
        --spectrum-picker-m-texticon-border-color-hover,
        var(--spectrum-alias-component-border-color-hover)
    );
    /*.spectrum-Picker:hover*/
    color: var(
        --spectrum-picker-m-texticon-text-color-hover,
        var(--spectrum-alias-component-text-color-hover)
    );
}
:host(:where(:hover)) .picker {
    /*.spectrum-Picker:hover .spectrum-Picker-menuIcon*/
    color: var(
        --spectrum-picker-m-texticon-icon-color-hover,
        var(--spectrum-alias-component-icon-color-hover)
    );
}
:host(:where(:active)),
:host(:where([open])) {
    /*.spectrum-Picker:active,
  .spectrum-Picker.is-open*/
    background-color: var(
        --spectrum-picker-m-texticon-background-color-down,
        var(--spectrum-alias-component-background-color-down)
    );
    border-color: var(
        --spectrum-picker-m-texticon-border-color-down,
        var(--spectrum-alias-component-border-color-down)
    );
}
:host(:where(:active.placeholder)) #label,
:host(:where([open].placeholder)) #label {
    /*.spectrum-Picker:active.is-placeholder .spectrum-Picker-label, .spectrum-Picker.is-open.is-placeholder .spectrum-Picker-label*/
    color: var(
        --spectrum-picker-m-texticon-placeholder-text-color-down,
        var(--spectrum-alias-placeholder-text-color-down)
    );
}
:host(:where(.focus-visible)),
:host(:where([focused])) {
    /*.spectrum-Picker.focus-ring,
  .spectrum-Picker.is-focused*/
    background-color: var(
        --spectrum-picker-m-texticon-background-color-key-focus,
        var(--spectrum-alias-component-background-color-key-focus)
    );
    border-color: var(
        --spectrum-picker-m-texticon-border-color-key-focus,
        var(--spectrum-alias-component-border-color-key-focus)
    );
    box-shadow: 0 0 0 var(--spectrum-picker-texticon-border-size-increase-focus)
        var(--spectrum-picker-quiet-border-color-key-focus);
    color: var(
        --spectrum-picker-m-texticon-text-color-key-focus,
        var(--spectrum-alias-component-text-color-key-focus)
    );
}
:host(:where(:focus-visible)),
:host(:where([focused])) {
    /*.spectrum-Picker.focus-ring,
  .spectrum-Picker.is-focused*/
    background-color: var(
        --spectrum-picker-m-texticon-background-color-key-focus,
        var(--spectrum-alias-component-background-color-key-focus)
    );
    border-color: var(
        --spectrum-picker-m-texticon-border-color-key-focus,
        var(--spectrum-alias-component-border-color-key-focus)
    );
    box-shadow: 0 0 0 var(--spectrum-picker-texticon-border-size-increase-focus)
        var(--spectrum-picker-quiet-border-color-key-focus);
    color: var(
        --spectrum-picker-m-texticon-text-color-key-focus,
        var(--spectrum-alias-component-text-color-key-focus)
    );
}
:host(:where(.focus-visible.placeholder)),
:host(:where([focused].placeholder)) {
    /*.spectrum-Picker.focus-ring.is-placeholder, .spectrum-Picker.is-focused.is-placeholder*/
    color: var(
        --spectrum-picker-m-texticon-placeholder-text-color-key-focus,
        var(--spectrum-alias-placeholder-text-color-hover)
    );
}
:host(:where(:focus-visible.placeholder)),
:host(:where([focused].placeholder)) {
    /*.spectrum-Picker.focus-ring.is-placeholder, .spectrum-Picker.is-focused.is-placeholder*/
    color: var(
        --spectrum-picker-m-texticon-placeholder-text-color-key-focus,
        var(--spectrum-alias-placeholder-text-color-hover)
    );
}
:host(:where([invalid])) {
    /*.spectrum-Picker.is-invalid*/
    border-color: var(
        --spectrum-picker-m-texticon-border-color-error,
        var(--spectrum-semantic-negative-color-default)
    );
}
:host(:where([invalid])) .validation-icon {
    /*.spectrum-Picker.is-invalid .spectrum-Picker-validationIcon*/
    color: var(
        --spectrum-picker-m-texticon-validation-icon-color-error,
        var(--spectrum-semantic-negative-icon-color)
    );
}
:host(:where([invalid]:hover)) {
    /*.spectrum-Picker.is-invalid:hover*/
    border-color: var(
        --spectrum-picker-m-texticon-border-color-error-hover,
        var(--spectrum-semantic-negative-color-hover)
    );
}
:host(:where([invalid]:active)),
:host(:where([invalid][open])) {
    /*.spectrum-Picker.is-invalid:active,
    .spectrum-Picker.is-invalid.is-open*/
    border-color: var(
        --spectrum-picker-m-texticon-border-color-error-down,
        var(--spectrum-semantic-negative-color-down)
    );
}
:host(:where([invalid].focus-visible)),
:host(:where([invalid][focused])) {
    /*.spectrum-Picker.is-invalid.focus-ring,
    .spectrum-Picker.is-invalid.is-focused*/
    border-color: var(
        --spectrum-picker-m-texticon-border-color-error-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
    box-shadow: 0 0 0 var(--spectrum-picker-texticon-border-size-increase-focus)
        var(
            --spectrum-picker-m-texticon-border-color-error-key-focus,
            var(--spectrum-alias-border-color-key-focus)
        );
}
:host(:where([invalid]:focus-visible)),
:host(:where([invalid][focused])) {
    /*.spectrum-Picker.is-invalid.focus-ring,
    .spectrum-Picker.is-invalid.is-focused*/
    border-color: var(
        --spectrum-picker-m-texticon-border-color-error-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
    box-shadow: 0 0 0 var(--spectrum-picker-texticon-border-size-increase-focus)
        var(
            --spectrum-picker-m-texticon-border-color-error-key-focus,
            var(--spectrum-alias-border-color-key-focus)
        );
}
:host(:where(:disabled)),
:host(:where([disabled])) {
    /*.spectrum-Picker:disabled,
  .spectrum-Picker.is-disabled*/
    background-color: var(
        --spectrum-picker-m-texticon-background-color-disabled,
        var(--spectrum-alias-component-background-color-disabled)
    );
    color: var(
        --spectrum-picker-m-texticon-text-color-disabled,
        var(--spectrum-alias-component-text-color-disabled)
    );
}
:host(:where(:disabled)) .icon,
:host(:where(:disabled)) .picker,
:host(:where(:disabled)) .validation-icon,
:host(:where([disabled])) .icon,
:host(:where([disabled])) .picker,
:host(:where([disabled])) .validation-icon {
    /*.spectrum-Picker:disabled .spectrum-Picker-icon,
    .spectrum-Picker:disabled .spectrum-Picker-menuIcon,
    .spectrum-Picker:disabled .spectrum-Picker-validationIcon,
    .spectrum-Picker.is-disabled .spectrum-Picker-icon,
    .spectrum-Picker.is-disabled .spectrum-Picker-menuIcon,
    .spectrum-Picker.is-disabled .spectrum-Picker-validationIcon*/
    color: var(
        --spectrum-picker-m-texticon-icon-color-disabled,
        var(--spectrum-alias-component-icon-color-disabled)
    );
}
:host(:where(:disabled)) #label.placeholder,
:host(:where([disabled])) #label.placeholder {
    /*.spectrum-Picker:disabled .spectrum-Picker-label.is-placeholder, .spectrum-Picker.is-disabled .spectrum-Picker-label.is-placeholder*/
    color: var(
        --spectrum-picker-m-texticon-placeholder-text-color-disabled,
        var(--spectrum-alias-text-color-disabled)
    );
}
.picker {
    /*.spectrum-Picker-menuIcon*/
    color: var(
        --spectrum-picker-m-texticon-icon-color,
        var(--spectrum-alias-component-icon-color-default)
    );
}
#label.placeholder {
    /*.spectrum-Picker-label.is-placeholder*/
    color: var(
        --spectrum-picker-m-texticon-placeholder-text-color,
        var(--spectrum-alias-placeholder-text-color)
    );
}
#label.placeholder:hover {
    /*.spectrum-Picker-label.is-placeholder:hover*/
    color: var(
        --spectrum-picker-m-texticon-placeholder-text-color-hover,
        var(--spectrum-alias-placeholder-text-color-hover)
    );
}
#label.placeholder:active {
    /*.spectrum-Picker-label.is-placeholder:active*/
    color: var(
        --spectrum-picker-m-texticon-placeholder-text-color-mouse-focus,
        var(--spectrum-alias-placeholder-text-color-down)
    );
}
:host(:where([quiet])) {
    background-color: var(
        --spectrum-picker-m-quiet-texticon-background-color,
        var(--spectrum-alias-component-background-color-quiet-default)
    );
    border-color: var(
        --spectrum-picker-m-quiet-texticon-border-color,
        var(--spectrum-alias-component-border-color-quiet-default)
    );
    /*.spectrum-Picker--quiet*/
    color: var(
        --spectrum-picker-m-texticon-text-color,
        var(--spectrum-alias-component-text-color-default)
    );
}
:host(:where([quiet]:hover)) {
    /*.spectrum-Picker--quiet:hover*/
    background-color: var(
        --spectrum-picker-m-quiet-texticon-background-color-hover,
        var(--spectrum-alias-component-background-color-quiet-hover)
    );
    color: var(
        --spectrum-picker-m-texticon-text-color-hover,
        var(--spectrum-alias-component-text-color-hover)
    );
}
:host(:where([quiet].focus-visible)),
:host(:where([quiet][focused])) {
    /*.spectrum-Picker--quiet.focus-ring,
  .spectrum-Picker--quiet.is-focused*/
    background-color: var(--spectrum-picker-quiet-background-color-key-focus);
    box-shadow: 0 2px 0 0 var(--spectrum-picker-quiet-border-color-key-focus);
}
:host(:where([quiet]:focus-visible)),
:host(:where([quiet][focused])) {
    /*.spectrum-Picker--quiet.focus-ring,
  .spectrum-Picker--quiet.is-focused*/
    background-color: var(--spectrum-picker-quiet-background-color-key-focus);
    box-shadow: 0 2px 0 0 var(--spectrum-picker-quiet-border-color-key-focus);
}
:host(:where([quiet].focus-visible.placeholder)),
:host(:where([quiet][focused].placeholder)) {
    /*.spectrum-Picker--quiet.focus-ring.is-placeholder, .spectrum-Picker--quiet.is-focused.is-placeholder*/
    color: var(
        --spectrum-picker-m-quiet-texticon-placeholder-text-color-key-focus,
        var(--spectrum-alias-placeholder-text-color-hover)
    );
}
:host(:where([quiet]:focus-visible.placeholder)),
:host(:where([quiet][focused].placeholder)) {
    /*.spectrum-Picker--quiet.focus-ring.is-placeholder, .spectrum-Picker--quiet.is-focused.is-placeholder*/
    color: var(
        --spectrum-picker-m-quiet-texticon-placeholder-text-color-key-focus,
        var(--spectrum-alias-placeholder-text-color-hover)
    );
}
:host(:where([quiet].focus-visible)) .picker,
:host(:where([quiet][focused])) .picker {
    /*.spectrum-Picker--quiet.focus-ring .spectrum-Picker-menuIcon, .spectrum-Picker--quiet.is-focused .spectrum-Picker-menuIcon*/
    color: var(
        --spectrum-picker-m-texticon-icon-color-key-focus,
        var(--spectrum-alias-component-icon-color-key-focus)
    );
}
:host(:where([quiet]:focus-visible)) .picker,
:host(:where([quiet][focused])) .picker {
    /*.spectrum-Picker--quiet.focus-ring .spectrum-Picker-menuIcon, .spectrum-Picker--quiet.is-focused .spectrum-Picker-menuIcon*/
    color: var(
        --spectrum-picker-m-texticon-icon-color-key-focus,
        var(--spectrum-alias-component-icon-color-key-focus)
    );
}
:host(:where([quiet].focus-visible)):after,
:host(:where([quiet][focused])):after {
    /*.spectrum-Picker--quiet.focus-ring::after, .spectrum-Picker--quiet.is-focused::after*/
    box-shadow: none;
}
:host(:where([quiet]:focus-visible)):after,
:host(:where([quiet][focused])):after {
    /*.spectrum-Picker--quiet.focus-ring::after, .spectrum-Picker--quiet.is-focused::after*/
    box-shadow: none;
}
:host(:where([quiet]:active)),
:host(:where([quiet][open])) {
    /*.spectrum-Picker--quiet:active,
  .spectrum-Picker--quiet.is-open*/
    background-color: var(
        --spectrum-picker-m-quiet-texticon-background-color-down,
        var(--spectrum-alias-background-color-transparent)
    );
    border-color: var(
        --spectrum-picker-m-quiet-texticon-border-color-down,
        var(--spectrum-alias-component-border-color-quiet-down)
    );
}
:host(:where([quiet]:active.focus-visible)),
:host(:where([quiet]:active[focused])),
:host(:where([quiet][open].focus-visible)),
:host(:where([quiet][open][focused])) {
    /*.spectrum-Picker--quiet:active.focus-ring,
    .spectrum-Picker--quiet:active.is-focused,
    .spectrum-Picker--quiet.is-open.focus-ring,
    .spectrum-Picker--quiet.is-open.is-focused*/
    background-color: var(--spectrum-picker-quiet-background-color-key-focus);
    box-shadow: 0 2px 0 0 var(--spectrum-picker-quiet-border-color-key-focus);
}
:host(:where([quiet]:active:focus-visible)),
:host(:where([quiet]:active[focused])),
:host(:where([quiet][open]:focus-visible)),
:host(:where([quiet][open][focused])) {
    /*.spectrum-Picker--quiet:active.focus-ring,
    .spectrum-Picker--quiet:active.is-focused,
    .spectrum-Picker--quiet.is-open.focus-ring,
    .spectrum-Picker--quiet.is-open.is-focused*/
    background-color: var(--spectrum-picker-quiet-background-color-key-focus);
    box-shadow: 0 2px 0 0 var(--spectrum-picker-quiet-border-color-key-focus);
}
:host(:where([quiet][invalid].focus-visible)),
:host(:where([quiet][invalid][focused])) {
    /*.spectrum-Picker--quiet.is-invalid.focus-ring,
    .spectrum-Picker--quiet.is-invalid.is-focused*/
    box-shadow: 0 2px 0 0
        var(
            --spectrum-picker-m-texticon-border-color-error-key-focus,
            var(--spectrum-alias-border-color-key-focus)
        );
}
:host(:where([quiet][invalid]:focus-visible)),
:host(:where([quiet][invalid][focused])) {
    /*.spectrum-Picker--quiet.is-invalid.focus-ring,
    .spectrum-Picker--quiet.is-invalid.is-focused*/
    box-shadow: 0 2px 0 0
        var(
            --spectrum-picker-m-texticon-border-color-error-key-focus,
            var(--spectrum-alias-border-color-key-focus)
        );
}
:host(:where([quiet]:disabled)),
:host(:where([quiet][disabled])) {
    /*.spectrum-Picker--quiet:disabled,
  .spectrum-Picker--quiet.is-disabled*/
    background-color: var(
        --spectrum-picker-m-quiet-texticon-background-color-disabled,
        var(--spectrum-alias-component-background-color-quiet-disabled)
    );
    color: var(
        --spectrum-picker-m-texticon-text-color-disabled,
        var(--spectrum-alias-component-text-color-disabled)
    );
}
@media (forced-colors: active) {
    :host {
        /*.spectrum-Picker*/
        --spectrum-picker-focus-ring-color: Highlight;
        --spectrum-picker-m-quiet-texticon-border-color-down: ButtonText;
        --spectrum-picker-m-quiet-texticon-border-color: ButtonText;
        --spectrum-picker-m-quiet-texticon-placeholder-text-color-key-focus: GrayText;
        --spectrum-picker-m-texticon-border-color-error-key-focus: Highlight;
        --spectrum-picker-m-texticon-placeholder-text-color-disabled: GrayText;
        --spectrum-picker-m-texticon-placeholder-text-color-down: GrayText;
        --spectrum-picker-m-texticon-placeholder-text-color-hover: GrayText;
        --spectrum-picker-m-texticon-placeholder-text-color-key-focus: GrayText;
        --spectrum-picker-m-texticon-placeholder-text-color-mouse-focus: GrayText;
        --spectrum-picker-m-texticon-placeholder-text-color: GrayText;
        --spectrum-picker-m-texticon-text-color-disabled: GrayText;
        --spectrum-picker-m-texticon-text-color-key-focus: ButtonText;
        --spectrum-picker-m-texticon-text-color: ButtonText;
        --spectrum-picker-m-textonly-focusring-border-color-key-focus: Highlight;
        --spectrum-picker-quiet-border-color-key-focus: Highlight;
    }
    :host(:where(.focus-visible)) {
        /*.spectrum-Picker.focus-ring*/
        outline: 2px solid Highlight;
    }
    :host(:where(:focus-visible)) {
        /*.spectrum-Picker.focus-ring*/
        outline: 2px solid Highlight;
    }
    :host(:where(:disabled)),
    [disabled] {
        /*.spectrum-Picker:disabled,
    .spectrum-Picker .is-disabled*/
        border-color: GrayText;
        border-width: var(--spectrum-picker-texticon-border-size);
    }
    :host(:where([quiet].focus-visible)),
    :host(:where([quiet][focused])) {
        box-shadow: 0 1px 0 0 var(--spectrum-picker-focus-ring-color);
        /*.spectrum-Picker--quiet.focus-ring,
    .spectrum-Picker--quiet.is-focused*/
        forced-color-adjust: none;
        outline: 0;
    }
    :host(:where([quiet]:focus-visible)),
    :host(:where([quiet][focused])) {
        box-shadow: 0 1px 0 0 var(--spectrum-picker-focus-ring-color);
        /*.spectrum-Picker--quiet.focus-ring,
    .spectrum-Picker--quiet.is-focused*/
        forced-color-adjust: none;
        outline: 0;
    }
}
