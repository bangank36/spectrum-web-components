/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/*THIS FILE IS MACHINE GENERATED. DO NOT EDIT*/
.spectrum-Accordion {
    /*.spectrum-Accordion*/
    --spectrum-accordion-item-title-padding-y: var(
        --spectrum-global-dimension-size-150
    );
    --spectrum-accordion-animation-duration: var(
        --spectrum-global-animation-duration-100,
        130ms
    );
    /*.spectrum-Accordion*/
    display: block;
    list-style: none;
    margin: 0;
    padding: 0;
}
.indicator {
    /*.spectrum-Accordion-itemIndicator*/
    display: block;
    /*[dir="ltr"] .spectrum-Accordion-itemIndicator*/
    left: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    );
    position: absolute;
    /*[dir="rtl"] .spectrum-Accordion-itemIndicator*/
    right: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    ); /*[dir="rtl"] .spectrum-Accordion-itemIndicator*/
    top: calc(
        50% -
            var(
                --spectrum-accordion-icon-height,
                var(--spectrum-global-dimension-size-125)
            ) / 2
    );
    transform: matrix(-1, 0, 0, 1, 0, 0);
    transition: transform ease var(--spectrum-accordion-animation-duration);
}
:host {
    border-bottom: var(
            --spectrum-accordion-item-border-size,
            var(--spectrum-alias-border-size-thin)
        )
        solid transparent;
    display: list-item;
    margin: 0;
    position: relative;
    /*.spectrum-Accordion-item*/
    z-index: inherit;
}
:host(:where(:first-of-type)) {
    /*.spectrum-Accordion-item:first-of-type*/
    border-top: var(
            --spectrum-accordion-item-border-size,
            var(--spectrum-alias-border-size-thin)
        )
        solid transparent;
}
#heading {
    box-sizing: border-box;
    /*.spectrum-Accordion-itemHeading*/
    margin: 0;
    position: relative;
}
#header {
    align-items: center;
    appearance: none;
    background-color: inherit;
    border: 0;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-family: inherit;
    font-size: var(
        --spectrum-accordion-item-title-text-size,
        var(--spectrum-global-dimension-font-size-50)
    );
    font-weight: 500;
    justify-content: flex-start;
    letter-spacing: calc(
        var(
                --spectrum-accordion-item-title-tracking,
                var(--spectrum-global-font-letter-spacing-medium)
            ) / 100
    );
    line-height: var(
        --spectrum-accordion-text-line-height,
        var(--spectrum-alias-component-text-line-height)
    );
    margin: 0;
    min-height: calc(
        100% -
            var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            )
    );
    padding-bottom: var(--spectrum-accordion-item-title-padding-y);
    /*[dir="ltr"] .spectrum-Accordion-itemHeader*/
    padding-left: calc(
        var(
                --spectrum-accordion-item-padding-x,
                var(--spectrum-global-dimension-size-225)
            ) +
            var(
                --spectrum-accordion-icon-height,
                var(--spectrum-global-dimension-size-125)
            ) +
            var(
                --spectrum-accordion-icon-gap,
                var(--spectrum-global-dimension-size-100)
            ) +
            var(
                --spectrum-accordion-item-border-left-size,
                var(--spectrum-alias-border-size-thick)
            )
    );
    /*[dir="rtl"] .spectrum-Accordion-itemHeader*/
    padding-left: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    );
    /*[dir="rtl"] .spectrum-Accordion-itemHeader*/
    padding-right: calc(
        var(
                --spectrum-accordion-item-padding-x,
                var(--spectrum-global-dimension-size-225)
            ) +
            var(
                --spectrum-accordion-icon-height,
                var(--spectrum-global-dimension-size-125)
            ) +
            var(
                --spectrum-accordion-icon-gap,
                var(--spectrum-global-dimension-size-100)
            ) +
            var(
                --spectrum-accordion-item-border-left-size,
                var(--spectrum-alias-border-size-thick)
            )
    );
    /*[dir="ltr"] .spectrum-Accordion-itemHeader*/
    padding-right: var(
        --spectrum-accordion-item-padding-x,
        var(--spectrum-global-dimension-size-225)
    );
    padding-top: var(--spectrum-accordion-item-title-padding-y);
    /*.spectrum-Accordion-itemHeader*/
    position: relative;
    /*[dir="ltr"] .spectrum-Accordion-itemHeader*/
    text-align: left;
    /*[dir="rtl"] .spectrum-Accordion-itemHeader*/
    text-align: right;
    text-overflow: ellipsis;
    text-transform: uppercase;
    width: 100%;
}
#header:focus {
    /*.spectrum-Accordion-itemHeader:focus*/
    outline: none;
}
#header:focus:after {
    /*[dir="ltr"] .spectrum-Accordion-itemHeader:focus::after*/
    left: 0;
}
#header:focus:after {
    /*[dir="rtl"] .spectrum-Accordion-itemHeader:focus::after*/
    right: 0;
}
#header:focus:after {
    bottom: calc(
        var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            ) * -1
    );
    /*.spectrum-Accordion-itemHeader:focus::after*/
    content: '';
    position: absolute;
    top: calc(
        var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            ) * -1
    );
    width: var(
        --spectrum-accordion-item-border-left-size,
        var(--spectrum-alias-border-size-thick)
    );
}
#content {
    display: none;
    padding-bottom: var(
        --spectrum-accordion-item-content-padding,
        var(--spectrum-global-dimension-size-200)
    );
    padding-left: var(
        --spectrum-accordion-item-content-padding,
        var(--spectrum-global-dimension-size-200)
    );
    padding-right: var(
        --spectrum-accordion-item-content-padding,
        var(--spectrum-global-dimension-size-200)
    );
    /*.spectrum-Accordion-itemContent*/
    padding-top: 0;
}
:host(:where([dir='ltr']))[open] > #heading > .indicator {
    transform: rotate(
        90deg
    ); /*[dir="ltr"] .spectrum-Accordion-item.is-open > .spectrum-Accordion-itemHeading > .spectrum-Accordion-itemIndicator*/
}
:host(:where([dir='rtl']))[open] > #heading > .indicator {
    transform: matrix(-1, 0, 0, 1, 0, 0) rotate(90deg); /*[dir="rtl"] .spectrum-Accordion-item.is-open > .spectrum-Accordion-itemHeading > .spectrum-Accordion-itemIndicator*/
}
:host(:where([dir='ltr']))[open] > .indicator {
    transform: rotate(
        90deg
    ); /*[dir="ltr"] .spectrum-Accordion-item.is-open > .spectrum-Accordion-itemIndicator*/
}
:host(:where([dir='rtl']))[open] > .indicator {
    transform: matrix(-1, 0, 0, 1, 0, 0) rotate(90deg); /*[dir="rtl"] .spectrum-Accordion-item.is-open > .spectrum-Accordion-itemIndicator*/
}
:host(:where([open] > #header)):after {
    /*.spectrum-Accordion-item.is-open > .spectrum-Accordion-itemHeader::after*/
    height: calc(
        100% -
            var(
                --spectrum-accordion-item-border-size,
                var(--spectrum-alias-border-size-thin)
            )
    );
}
:host(:where([open] > #content)) {
    /*.spectrum-Accordion-item.is-open > .spectrum-Accordion-itemContent*/
    display: block;
}
:host(:where([disabled])) #header {
    /*.spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader*/
    cursor: default;
}
:host {
    /*.spectrum-Accordion-item*/
    border-color: var(
        --spectrum-accordion-border-color,
        var(--spectrum-global-color-gray-300)
    );
}
.indicator {
    /*.spectrum-Accordion-itemIndicator*/
    color: var(
        --spectrum-accordion-icon-color,
        var(--spectrum-global-color-gray-600)
    );
}
#header {
    /*.spectrum-Accordion-itemHeader*/
    color: var(
        --spectrum-accordion-text-color,
        var(--spectrum-global-color-gray-700)
    );
}
#header:hover {
    background-color: var(
        --spectrum-accordion-item-background-color-hover,
        var(--spectrum-global-color-gray-200)
    );
    /*.spectrum-Accordion-itemHeader:hover*/
    color: var(
        --spectrum-accordion-text-color-hover,
        var(--spectrum-global-color-gray-900)
    );
}
#header:hover + .indicator {
    /*.spectrum-Accordion-itemHeader:hover + .spectrum-Accordion-itemIndicator*/
    color: var(
        --spectrum-accordion-icon-color-hover,
        var(--spectrum-alias-icon-color-hover)
    );
}
#header.focus-visible:after {
    /*.spectrum-Accordion-itemHeader.focus-ring:after*/
    background-color: var(
        --spectrum-accordion-item-border-left-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
}
#header:focus-visible:after {
    /*.spectrum-Accordion-itemHeader.focus-ring:after*/
    background-color: var(
        --spectrum-accordion-item-border-left-color-key-focus,
        var(--spectrum-alias-border-color-key-focus)
    );
}
:host(:where([open])) #header:hover {
    /*.spectrum-Accordion-item.is-open .spectrum-Accordion-itemHeader:hover*/
    background-color: transparent;
}
:host(:where([disabled])) #header,
:host(:where([disabled])) #header.focus-visible,
:host(:where([disabled])) #header:hover {
    background-color: transparent;
    /*.spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader,
    .spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader:hover,
    .spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader.focus-ring*/
    color: var(
        --spectrum-accordion-text-color-disabled,
        var(--spectrum-global-color-gray-500)
    );
}
:host(:where([disabled])) #header,
:host(:where([disabled])) #header:focus-visible,
:host(:where([disabled])) #header:hover {
    background-color: transparent;
    /*.spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader,
    .spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader:hover,
    .spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader.focus-ring*/
    color: var(
        --spectrum-accordion-text-color-disabled,
        var(--spectrum-global-color-gray-500)
    );
}
:host(:where([disabled])) #header + .indicator {
    /*.spectrum-Accordion-item.is-disabled .spectrum-Accordion-itemHeader + .spectrum-Accordion-itemIndicator*/
    color: var(
        --spectrum-accordion-icon-color-disabled,
        var(--spectrum-alias-icon-color-disabled)
    );
}
@media (forced-colors: active) {
    #header.focus-visible {
        /*.spectrum-Accordion-itemHeader.focus-ring*/
        outline: 3px solid CanvasText;
    }
    #header:focus-visible {
        /*.spectrum-Accordion-itemHeader.focus-ring*/
        outline: 3px solid CanvasText;
    }
}
