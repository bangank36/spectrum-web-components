/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/*THIS FILE IS MACHINE GENERATED. DO NOT EDIT*/
.checkmark {
    opacity: 1;
    /*.spectrum-Menu-checkmark*/
    transform: scale(1);
}
:host(:where([dir='ltr'])) {
    /*[dir="ltr"] .spectrum-Menu-item*/
    border-left: var(--spectrum-listitem-texticon-focus-indicator-size) solid
        transparent;
}
:host(:where([dir='rtl'])) {
    /*[dir="rtl"] .spectrum-Menu-item*/
    border-right: var(--spectrum-listitem-texticon-focus-indicator-size) solid
        transparent;
}
:host {
    align-items: center;
    box-sizing: border-box;
    /*.spectrum-Menu-item*/
    cursor: pointer;
    display: flex;
    font-size: var(--spectrum-listitem-texticon-text-size);
    font-style: normal;
    font-weight: var(--spectrum-listitem-texticon-text-font-weight);
    margin: 0;
    min-height: var(--spectrum-listitem-texticon-height);
    padding: var(--spectrum-listitem-texticon-padding-y)
        var(--spectrum-listitem-texticon-padding-right)
        var(--spectrum-listitem-texticon-padding-y)
        var(--spectrum-listitem-texticon-padding-left);
    position: relative;
    text-decoration: none;
}
:host(:where(:focus)) {
    /*.spectrum-Menu-item:focus*/
    outline: none;
}
:host(:where([dir='ltr']))[selected] {
    /*[dir="ltr"] .spectrum-Menu-item.is-selected*/
    padding-right: calc(
        var(--spectrum-listitem-texticon-padding-right) -
            var(
                --spectrum-popover-border-size,
                var(--spectrum-alias-border-size-thin)
            )
    );
}
:host(:where([dir='rtl']))[selected] {
    /*[dir="rtl"] .spectrum-Menu-item.is-selected*/
    padding-left: calc(
        var(--spectrum-listitem-texticon-padding-right) -
            var(
                --spectrum-popover-border-size,
                var(--spectrum-alias-border-size-thin)
            )
    );
}
:host(:where([selected])) .checkmark {
    /*.spectrum-Menu-item.is-selected .spectrum-Menu-checkmark*/
    display: block;
}
.icon,
::slotted([slot='icon']) {
    align-self: flex-start;
    /*.spectrum-Menu-item .spectrum-Icon,
  .spectrum-Menu-item .spectrum-Menu-itemIcon*/
    flex-shrink: 0;
}
:host(:where([dir='ltr'])) .icon + #label,
:host(:where([dir='ltr'])) slot[name='icon'] + #label {
    /*[dir="ltr"] .spectrum-Menu-item .spectrum-Icon + .spectrum-Menu-itemLabel,[dir="ltr"] 
  .spectrum-Menu-item .spectrum-Menu-itemIcon + .spectrum-Menu-itemLabel*/
    margin-left: var(--spectrum-listitem-texticon-icon-gap);
}
:host(:where([dir='rtl'])) .icon + #label,
:host(:where([dir='rtl'])) slot[name='icon'] + #label {
    /*[dir="rtl"] .spectrum-Menu-item .spectrum-Icon + .spectrum-Menu-itemLabel,[dir="rtl"] 
  .spectrum-Menu-item .spectrum-Menu-itemIcon + .spectrum-Menu-itemLabel*/
    margin-right: var(--spectrum-listitem-texticon-icon-gap);
}
.icon + #label,
slot[name='icon'] + #label {
    /*.spectrum-Menu-item .spectrum-Icon + .spectrum-Menu-itemLabel,
  .spectrum-Menu-item .spectrum-Menu-itemIcon + .spectrum-Menu-itemLabel*/
    width: calc(
        100% - var(--spectrum-listitem-texticon-ui-icon-width) -
            var(--spectrum-listitem-texticon-icon-gap) -
            var(--spectrum-listitem-textthumbnail-padding-left) -
            var(
                --spectrum-alias-workflow-icon-size-m,
                var(--spectrum-global-dimension-size-225)
            )
    );
}
#label {
    /*.spectrum-Menu-itemLabel*/
    flex: 1 1 auto;
    -webkit-hyphens: auto;
    hyphens: auto;
    line-height: var(--spectrum-listitem-texticon-label-line-height);
    overflow-wrap: break-word;
    width: calc(
        100% - var(--spectrum-listitem-texticon-ui-icon-width) -
            var(--spectrum-listitem-texticon-icon-gap)
    );
}
:host([no-wrap]) #label {
    overflow: hidden;
    /*.spectrum-Menu-itemLabel--wrapping*/
    text-overflow: ellipsis;
    white-space: nowrap;
}
.checkmark {
    align-self: flex-start;
    /*.spectrum-Menu-checkmark*/
    display: none;
}
.checkmark,
.chevron {
    /*.spectrum-Menu-checkmark,
.spectrum-Menu-chevron*/
    flex-grow: 0;
    margin-top: calc(
        var(--spectrum-listitem-texticon-ui-icon-margin-top) -
            var(--spectrum-listitem-texticon-padding-y) + 1px
    );
    /*[dir="ltr"] .spectrum-Menu-checkmark,[dir="ltr"] 
.spectrum-Menu-chevron*/
    padding-left: var(--spectrum-listitem-texticon-icon-gap);
    /*[dir="rtl"] .spectrum-Menu-checkmark,[dir="rtl"] 
.spectrum-Menu-chevron*/
    padding-right: var(--spectrum-listitem-texticon-icon-gap);
}
.chevron {
    transform: matrix(-1, 0, 0, 1, 0, 0); /*[dir="rtl"] .spectrum-Menu-chevron*/
}
:host {
    /*.spectrum-Menu-item*/
    background-color: var(
        --spectrum-listitem-m-texticon-background-color,
        var(--spectrum-alias-background-color-transparent)
    );
    color: var(
        --spectrum-listitem-m-texticon-text-color,
        var(--spectrum-alias-component-text-color-default)
    );
}
:host(:where([dir='ltr'])).focus-visible,
:host(:where([dir='ltr']))[focused] {
    /*[dir="ltr"] .spectrum-Menu-item.focus-ring,[dir="ltr"] 
  .spectrum-Menu-item.is-focused*/
    border-left-color: var(
        --spectrum-listitem-m-texticon-focus-indicator-color,
        var(--spectrum-alias-border-color-key-focus)
    );
}
:host(:where([dir='ltr'])):focus-visible,
:host(:where([dir='ltr']))[focused] {
    /*[dir="ltr"] .spectrum-Menu-item.focus-ring,[dir="ltr"] 
  .spectrum-Menu-item.is-focused*/
    border-left-color: var(
        --spectrum-listitem-m-texticon-focus-indicator-color,
        var(--spectrum-alias-border-color-key-focus)
    );
}
:host(:where([dir='rtl'])).focus-visible,
:host(:where([dir='rtl']))[focused] {
    /*[dir="rtl"] .spectrum-Menu-item.focus-ring,[dir="rtl"] 
  .spectrum-Menu-item.is-focused*/
    border-right-color: var(
        --spectrum-listitem-m-texticon-focus-indicator-color,
        var(--spectrum-alias-border-color-key-focus)
    );
}
:host(:where([dir='rtl'])):focus-visible,
:host(:where([dir='rtl']))[focused] {
    /*[dir="rtl"] .spectrum-Menu-item.focus-ring,[dir="rtl"] 
  .spectrum-Menu-item.is-focused*/
    border-right-color: var(
        --spectrum-listitem-m-texticon-focus-indicator-color,
        var(--spectrum-alias-border-color-key-focus)
    );
}
:host(:where(.focus-visible)),
:host(:where([focused])) {
    /*.spectrum-Menu-item.focus-ring,
  .spectrum-Menu-item.is-focused*/
    background-color: var(
        --spectrum-listitem-m-texticon-background-color-key-focus,
        var(--spectrum-alias-background-color-hover-overlay)
    );
    color: var(
        --spectrum-listitem-m-texticon-text-color-key-focus,
        var(--spectrum-alias-component-text-color-key-focus)
    );
}
:host(:where(:focus-visible)),
:host(:where([focused])) {
    /*.spectrum-Menu-item.focus-ring,
  .spectrum-Menu-item.is-focused*/
    background-color: var(
        --spectrum-listitem-m-texticon-background-color-key-focus,
        var(--spectrum-alias-background-color-hover-overlay)
    );
    color: var(
        --spectrum-listitem-m-texticon-text-color-key-focus,
        var(--spectrum-alias-component-text-color-key-focus)
    );
}
:host(:where(.is-highlighted)),
:host(:where(.is-open)),
:host(:where(:focus)),
:host(:where(:hover)) {
    /*.spectrum-Menu-item:hover,
  .spectrum-Menu-item:focus,
  .spectrum-Menu-item.is-highlighted,
  .spectrum-Menu-item.is-open*/
    background-color: var(
        --spectrum-listitem-m-texticon-background-color-hover,
        var(--spectrum-alias-background-color-hover-overlay)
    );
    color: var(
        --spectrum-listitem-m-texticon-text-color-hover,
        var(--spectrum-alias-component-text-color-hover)
    );
}
:host(:where([selected])) {
    /*.spectrum-Menu-item.is-selected*/
    color: var(
        --spectrum-listitem-m-texticon-text-color-selected,
        var(--spectrum-alias-component-text-color-default)
    );
}
:host(:where([selected])) .checkmark {
    /*.spectrum-Menu-item.is-selected .spectrum-Menu-checkmark*/
    color: var(
        --spectrum-listitem-m-texticon-ui-icon-color-selected,
        var(--spectrum-alias-icon-color-selected)
    );
}
:host(:where(:active)),
[active] {
    /*.spectrum-Menu-item .is-active,
  .spectrum-Menu-item:active*/
    background-color: var(
        --spectrum-listitem-m-texticon-background-color-down,
        var(--spectrum-alias-background-color-hover-overlay)
    );
}
:host(:where([disabled])) {
    /*.spectrum-Menu-item.is-disabled*/
    background-color: var(
        --spectrum-listitem-m-texticon-background-color-disabled,
        var(--spectrum-alias-background-color-transparent)
    );
    background-image: none;
    color: var(
        --spectrum-listitem-m-texticon-text-color-disabled,
        var(--spectrum-alias-component-text-color-disabled)
    );
    cursor: default;
}
@media (forced-colors: active) {
    :host {
        --spectrum-listheading-text-color: ButtonText;
        --spectrum-listitem-m-texticon-background-color: ButtonFace;
        --spectrum-listitem-m-texticon-background-color-disabled: ButtonFace;
        --spectrum-listitem-m-texticon-background-color-down: ButtonFace;
        --spectrum-listitem-m-texticon-background-color-hover: Highlight;
        --spectrum-listitem-m-texticon-background-color-key-focus: Highlight;
        --spectrum-listitem-m-texticon-focus-indicator-color: Highlight;
        --spectrum-listitem-m-texticon-text-color: ButtonText;
        --spectrum-listitem-m-texticon-text-color-disabled: GrayText;
        --spectrum-listitem-m-texticon-text-color-hover: HighlightText;
        --spectrum-listitem-m-texticon-text-color-key-focus: HighlightText;
        --spectrum-listitem-m-texticon-text-color-selected: ButtonText;
        --spectrum-listitem-m-texticon-ui-icon-color-selected: Highlight;
        /*.spectrum-Menu-item*/
        forced-color-adjust: none;
    }
    :host(:where(:not([disabled]).focus-visible)),
    :host(:where(:not([disabled]).is-highlighted)),
    :host(:where(:not([disabled]).is-open)),
    :host(:where(:not([disabled]):focus)),
    :host(:where(:not([disabled]):hover)),
    :host(:where(:not([disabled])[focused])) {
        /*.spectrum-Menu-item:not(.is-disabled):hover,
      .spectrum-Menu-item:not(.is-disabled):focus,
      .spectrum-Menu-item:not(.is-disabled).is-highlighted,
      .spectrum-Menu-item:not(.is-disabled).is-open,
      .spectrum-Menu-item:not(.is-disabled).focus-ring,
      .spectrum-Menu-item:not(.is-disabled).is-focused*/
        background-color: var(
            --spectrum-listitem-m-texticon-background-color-key-focus,
            var(--spectrum-alias-background-color-hover-overlay)
        );
        color: var(
            --spectrum-listitem-m-texticon-text-color-key-focus,
            var(--spectrum-alias-component-text-color-key-focus)
        );
    }
    :host(:where(:not([disabled]).is-highlighted)),
    :host(:where(:not([disabled]).is-open)),
    :host(:where(:not([disabled]):focus)),
    :host(:where(:not([disabled]):focus-visible)),
    :host(:where(:not([disabled]):hover)),
    :host(:where(:not([disabled])[focused])) {
        /*.spectrum-Menu-item:not(.is-disabled):hover,
      .spectrum-Menu-item:not(.is-disabled):focus,
      .spectrum-Menu-item:not(.is-disabled).is-highlighted,
      .spectrum-Menu-item:not(.is-disabled).is-open,
      .spectrum-Menu-item:not(.is-disabled).focus-ring,
      .spectrum-Menu-item:not(.is-disabled).is-focused*/
        background-color: var(
            --spectrum-listitem-m-texticon-background-color-key-focus,
            var(--spectrum-alias-background-color-hover-overlay)
        );
        color: var(
            --spectrum-listitem-m-texticon-text-color-key-focus,
            var(--spectrum-alias-component-text-color-key-focus)
        );
    }
    :host(:where(:not([disabled]).focus-visible[selected])) .checkmark,
    :host(:where(:not([disabled]).is-highlighted[selected])) .checkmark,
    :host(:where(:not([disabled]).is-open[selected])) .checkmark,
    :host(:where(:not([disabled]):focus[selected])) .checkmark,
    :host(:where(:not([disabled]):hover[selected])) .checkmark,
    :host(:where(:not([disabled])[focused][selected])) .checkmark {
        /*.spectrum-Menu-item:not(.is-disabled):hover.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled):focus.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).is-highlighted.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).is-open.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).focus-ring.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).is-focused.is-selected .spectrum-Menu-checkmark*/
        color: HighlightText;
    }
    :host(:where(:not([disabled]).is-highlighted[selected])) .checkmark,
    :host(:where(:not([disabled]).is-open[selected])) .checkmark,
    :host(:where(:not([disabled]):focus-visible[selected])) .checkmark,
    :host(:where(:not([disabled]):focus[selected])) .checkmark,
    :host(:where(:not([disabled]):hover[selected])) .checkmark,
    :host(:where(:not([disabled])[focused][selected])) .checkmark {
        /*.spectrum-Menu-item:not(.is-disabled):hover.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled):focus.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).is-highlighted.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).is-open.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).focus-ring.is-selected .spectrum-Menu-checkmark, .spectrum-Menu-item:not(.is-disabled).is-focused.is-selected .spectrum-Menu-checkmark*/
        color: HighlightText;
    }
}
